/* import fonts - google */
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&display=swap');

/*  ==================================================GERAL==================== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* usage - font-family: 'DM Sans', sans-serif;*/

/* rem - propriedade relativa

  tamanho padrão fonte navegador: 16px
 */
:root {
  /* variavel para cor */
  /* alterações mais para SVG em img */
  --hue: 290;

  /* 62.5% == 10px aproximadamente */
  font-size: 62.5%;
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);
  --brand-beige: hsl(39, 100%, 97%);

  /* calcula a diferença da cor antes era 148(verde)/ e o primary-color 170 entao: 170-148=22 */
  /* obs: lembrar de colocar espaço entre o calculu - 22, para nao virar negativo */
  --brand-green-light: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-green-hover: hsl(var(--hue), 100%, 14%);

  /* vai ser aplicado a todo body */
  --brand-green-light2: hsl(calc(var(--hue) + 10), 14%, 97%);

  /* height do elemento conforme figma, o mesmo se daria somando padding top e bottom */
  --nav-height: 7.2rem;
}

.dark-mode:root {
  --hue: 290;

  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 41%, 93%);
  --paragraph: hsl(0, 0%, 100%);
  --brand-beige: hsl(0, 2%, 10%);

  --brand-green-light: hsl(0, 0%, 0%);
  --brand-green-hover: hsl(220, 2%, 30%);

  /* vai ser aplicado a todo body */
  --brand-green-light2: hsl(0, 0%, 0%);
}

html {
  /* scroll suave */
  scroll-behavior: smooth;
}

/* font-size: 1rem  - equivale a 100% do font-size definido no root*/
/* 1rem = 10px */
/* obs: para saber o valor em rem - qntidade em pixel/10 */
html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans', sans-serif;
  /* 1.6 define o font para aproximadamente 16px */
  font-size: 1.6rem;
  text-align: center;

  /* sobrepor, tamanho do body etc deixar o nav qndo scroll por cima, contar o tamanho dele*/
  overflow: overlay;

  background-color: var(--brand-green-light2);
}

/* segue a mesma ideia do .content, para reutilizar em outras sessoes sem ficar repetindo o mesmo conteudo */
.wrapper {
  /* modificado para min() */
  /* width: 37.5rem; */

  /* assim fica definido que o tamanho maximo sera de 50rem=500px, se ficar menor que 50rem, ira ocupar entao 100% */
  width: min(50rem, 100%);
  margin-left: auto;
  margin-right: auto;

  padding-inline: 2.4rem;
}

ul {
  list-style: none;
}

/* padrao para imagems no projeto */
img {
  /* vai sempre respeitar 100% a caixa que ela esta */
  max-width: 100%;
}

/* todo Section, por definiçao (conforme figma) tem um espaço TOP e Bottom de 100px, um padding - para os elementos */
section {
  /* ou padding-block */
  padding-top: 10rem;
  padding-bottom: 10rem;
}

section header h4 {
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 150%;
  margin-bottom: 1.6rem;
  letter-spacing: 0.08rem;
  text-transform: uppercase;

  color: var(--primary-color);
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;

  color: var(--headline);
}

section header h1 {
  font-size: 3.4rem;
  line-height: 130%;
  color: var(--headline);

  /* nesse projeto apenas nesse h1 usa o magin-bottom, mas em outros usar separado */
  margin-bottom: 2.4rem;
}

section .content p {
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;

  color: var(--paragraph);
}

.button {
  background: var(--primary-color);
  /* utilizando essas propriedades fica limitado largura e altura, caso seja mais texto ficará quebrado
  entao seria melhor utilizar padding para preenchimento dos espaços, de acordo */
  /* width: 26.3rem;
     height: 6.2rem; */
  padding: 1.6rem 3.2rem;
  /* qndo fica esticado alem */
  /* quando usa o display flex, para os conteudos internos, por fora ele entende que é Block,
  assim ele pega 100% do espaço que ele esta, nesse caso definido no .wrapper*/
  /* ------- usa o fit-content, que vai se adaptar ao conteudo, e nao a caixa a fora, a largura fica adaptada ao
  conteudo */
  width: fit-content;

  color: #fff;
  font-size: 1.4rem;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;

  /* trabalha com as caixas de dentro */
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1.6rem;

  border-radius: 4rem;
  border: none;
  /* margin-bottom: 6rem; */

  /* transition para quando houver o :hover*/
  transition: background 200ms;
}

.button:hover {
  background-color: var(--brand-green-hover);
}

/* ==CUSTOM COLORS== colorindo os SVG*/
#services .card svg circle {
  fill: var(--brand-green-light);
}

#backToTopButton svg circle {
  fill: var(--primary-color);
}

#contact ul li svg path {
  stroke: var(--primary-color);
}

/* seletor para pegar apenas as letras com a cor X */
#navigation .logo svg path[fill*='#00856F'] {
  fill: var(--primary-color);
}
/* quando receber o scroll - ao scroll a pagina e o menu estiver aberto*/
body.menu-expanded #navigation .logo svg path,
#navigation.scroll .logo svg path[fill*='#00856F'] {
  fill: #fff;
}

#navigation button.open-menu svg path[stroke*='#00856F'] {
  stroke: var(--primary-color);
}
#navigation.scroll button.open-menu svg path[stroke*='#00856F'] {
  stroke: #fff;
}

/*  ==================================================NAVIGATION==================== */

/* 1º versao NAV */
/* nav {
  display: flex;
  align-items: center;
  justify-content: space-between;

  height: var(--nav-height);

  padding-block: 1.6rem;

  /* fixar o menu, para qndo scroll */
/* position: fixed; */
/* top: 0; */
/* left: 50%; */
/* deslocar apenas a metade do tamanho do elemento, para centralizar */
/* transform: translateX(-50%); */
/* }  */

nav {
  display: flex;
  height: var(--nav-height);

  /* fixar o menu, para qndo scroll */
  position: fixed;
  top: 0;

  /* left: 50%;
  /* deslocar apenas a metade do tamanho do elemento, para centralizar */
  /* transform: translateX(-50%); */

  /* esse width estava no nav.scroll e estava limitado ao tamanho nav, agora no wrapper ele preenche automatico e centraliza  */
  width: 100vw;

  /* subir 100 camadas, para ficar por cima, por conta do scrollreveal, que estava sobrepondo */
  z-index: 100;
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

nav.scroll {
  background-color: var(--primary-color);
  /* qndo scroll vai pegar toda a largura da viewport */
}

/* svg:nth-child(1) */
nav.scroll .logo path {
  fill: #fff;
}
nav.scroll button path {
  stroke: #fff;
}

nav button {
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu {
  position: fixed;
}

/*  ======================NAVIGATION MENU EXPANDED==================== */

/* quando transbordar as laterias para nao aparecer as barras de rolagem */
body.menu-expanded {
  overflow: hidden;
}

/* > seleciona todos elementos do primeiro nivel, :not(nav) = menos elemento Nav */
/* sumir com todos os elementos abaixo de nav (header, etc..) */
body.menu-expanded > :not(nav) {
  /* display: none; --- remove os elementos como se nao existissem*/
  visibility: hidden;
}

/* quando body nao tiver a classe menu.expanded */
.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

/* quando o body tiver a classe menu.expanded */
body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

/*por padrao ele vai ser jogado para baixo, por causa da animação CSS apenas, para surgir de baixo  */
.menu {
  transform: translateY(100%);
}

body.menu-expanded .menu {
  /* position: fixed; - nao mais necessario aqui, foi criado classe nav .menu - stage05*/
  top: 0;
  left: 0;
  background-color: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  /* adicionando efeito transiçao CSS - animação */
  transition: transform 300ms;
  /* ao abrir ele volta para cima que por padrao estava em translateY(100%) */
  transform: translateY(0);
}

/* nav tambem possui o position fixed, entao nesse caso usa o relative para "tirar" o posicionamento fixed do nav*/
/* body.menu-expanded nav {
  position: relative;
} */

/* aplica somente ao primeiro UL para nao mudar o display dos social links */
.menu ul:nth-child(1) {
  display: flex;
  flex-direction: column;
  /* espaçamento entre os elementos */
  gap: 4.8rem;

  margin-top: 6rem;

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: #fff;
  text-decoration: none;
}

.menu .button {
  background-color: #fff;

  border-radius: 4rem;

  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;

  color: var(--primary-color);

  display: inline-block;

  padding-block: 1.6rem;
  padding-inline: 3.2rem;

  margin-top: 4.8rem;
  margin-bottom: 4rem;
}

.menu .button:hover {
  background-color: var(--primary-color);
  color: #fff;

  /* adiciona um pouco de brilho ao passar o mouse, para diferenciar */
  filter: brightness(1.3);
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  /* espaçamento entre os elementos */
  gap: 3.2rem;

  margin-top: 4rem;
}

/* =============== The switch - the box around the slider ========*/
nav#navigation .menu .switch {
  position: relative;

  display: block;
  margin-inline: auto;

  width: 6rem;
  height: 3.4rem;
}

/* Hide default HTML checkbox */
nav#navigation .menu .switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
nav#navigation .menu .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #fff;

  transition: 0.4s;

  border-radius: 3.4rem;
}

nav#navigation .menu .slider:before {
  position: absolute;
  content: '';
  height: 2.6rem;
  width: 2.6rem;
  left: 0.4rem;
  bottom: 0.4rem;
  background-color: var(--primary-color);
  background-image: url('../assets/darkmode-scroll-inativo-24x24.png');
  background-repeat: no-repeat;
  background-size: 80%;
  background-position: center;

  transition: 0.4s;

  border-radius: 50%;
}

nav#navigation .menu .switch input:checked + .slider {
  background-color: #ccc;
}

/* nav#navigation .menu .switch input:focus + .slider {
  box-shadow: 0 0 1px #2196f3;
} */

/* faz o movimento de switch */
nav#navigation .menu .switch input:checked + .slider:before {
  transform: translateX(2.6rem);
}

/* -------------END SWITCH -------------- */

/* precisa colocar a logo e o botao no mesmo nivel do menu-expanded */
body.menu-expanded .logo,
body.menu-expanded button {
  /* para poder usar outras propriedades como o z-index */
  position: relative;
  z-index: 10;
}
body.menu-expanded .logo path {
  fill: #fff;
}
body.menu-expanded button path {
  stroke: #fff;
}

/*  ==================================================HEADER - HOME ==================== */
/* ------------------- aula 2 ---------------- */
/* para fazer o backgroud atras do header ate a metade dos stats, conforme figma */
#home::before {
  content: '';
  /* 100vw pega toda largura da viewport da pagina */
  width: 100%;
  /* calc para manter a proporçao msmo com o fixed Nav sobreposto */
  /* % para melhor adaptçao quando diminuido a tela */
  height: calc(76% + var(--nav-height));
  background-color: var(--brand-green-light);
  /* para o elemento aparecer, ele precisa ter um display */
  display: block;

  /* elemento colado nas extremidades da viewport */
  position: absolute;
  top: 0;
  left: 0;

  /* z-index: 0   - padrao de todo elemento */
  z-index: -1;
}
/* ------------------------------------------- */

#home {
  /* versao desktop ::- todas as sessoes estavam recebendo padding-bloc 10rem, mas o #home nao pode receber */
  padding-block: 0;
  /* ------------ */
  /* height: 108rem; */
  /* calc faz a soma do margin-top 4.1 com o height do nav, ja que agora ele esta fixed e sobreposto aos elementos */
  /* margin-top: calc(4.1rem + var(--nav-height)); */
  padding-top: calc(4.1rem + var(--nav-height));
}

/* padronizado foi definido no section header h4 e h1*/
/* #home h4 {
  font-size: 1.4rem;
  line-height: 150%;

  margin-top: 4.1rem;
  margin-bottom: 1.6rem;

  color: var(--primary-color);
} */

/* #home h1 {
  font-size: 3.4rem;
  line-height: 130%;
  color: var(--headline);

  margin-bottom: 2.4rem;
} */

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  color: var(--paragraph);

  margin-left: auto;
  margin-right: auto;
  margin-bottom: 3.2rem;
}

/* criada classe geral .button com as propriedades para usar em ambos button da pagina */
/* #home button {
  background: var(--primary-color);
  width: 26.3rem;
  height: 5.2rem;

  border-radius: 4rem;
  border: none;

  color: #fff;
  font-size: 1.4rem;
  text-transform: uppercase;

  /* trabalha com as caixas de dentro */
/* display: flex;
  justify-content: center;
  align-items: center; */
/* espaço entre os elementos */
/* gap: 1.6rem; */
/* o flex tem o mesmo comportamento do block para os elementos fora */
/* margin-left: auto;
  margin-right: auto;
  margin-bottom: 6rem; */
/* } */
#home .button {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 6rem;
}

#home img {
  width: 26.4rem;
  display: block;
  margin-left: auto;
  margin-right: auto;

  /* para posicionar a imagem um pouco para baixo, mexendo apenas o eixo do objeto dentro da "caixa" */
  /* objetct-position: 0 2rem */
  object-position: 0px 2rem;

  filter: drop-shadow(0px -3px 5px var(--primary-color));
}

#home .div-stats {
  /* width: 32.7rem; */
  /* height: 47rem; */
  width: 100%;

  background: var(--brand-beige);
  /* 
  margin-left: auto;
  margin-right: auto; */
  /* pode ser substituido por margin-inline = atua sobre o eixo X */
  margin-inline: auto;

  /* para nao colocar o height */
  /* block = atua sobre o eixo Y */
  padding-block: 4rem;

  border-radius: 0.6rem;
  border: 1px solid var(--brand-green-light);

  display: flex;
  flex-direction: column;
  justify-content: center;
  /* align-items: center; */

  /* aplica separação nos elementos - 60px */
  gap: 6rem;
}

#home .stat p {
  font-size: 1.6rem;
  line-height: 150%;
  color: var(--primary-color);

  margin: 0;
}

#home .stat h3 {
  font-size: 4.8rem;
  line-height: 130%;
  color: var(--headline);
  margin-bottom: 0.4rem;
}

/*  ======================SERVIÇOS==================== */

/* padronizado foi defindo do section header h2 e h4 */

/* section services referenciado pelo ID acessando as tags */
/* #services header h4 {
  font-size: 1.4rem;
  line-height: 150%;

  color: var(--primary-color);

  letter-spacing: 0.08rem;
  text-transform: uppercase; */

/* margin entre os elementos conforme figma */
/* margin-bottom: 1.6rem;
} */
#services header h2 {
  margin-bottom: 6rem;
}

/* AULA 03 - Sobre não aplicar LarguraxAltura nos cards: como a div ela ja é um display block, ela ja ocupa toda a largura
 do espaço que ela esta = 100% / oque precisa fazer nesse caso é aplicar os outros espaços internosXexternos conforme a 
 estrutura do Figma ou etc*/

/* #services apenas para melhor identificação do card, e caso for usar o card fora da section #services, nao terao essas configuraçoes*/
#services .cards {
  display: flex;
  flex-direction: column;
  /* espaço entre os elementos filhos, no caso .card */
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;

  background: #fff;

  border: 1px solid var(--brand-green-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  /* ou margin-block */
  margin-top: 1.3rem;
  margin-bottom: 1.3rem;
}

/* --movido para Custom Colors /\ */
/* alterar cor de fundo da img/icone svg no card */
/* #services .card svg circle {
  fill: var(--brand-green-light);
} */

/*  ======================ABOUT/SOBRE==================== */

#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 2.4rem;
}

/* criado padrao para p no GERAL /\ */

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/*  ======================TESTIMONIALS==================== */
#testimonials {
  background-color: #fff;
}

#testimonials blockquote {
  padding-inline: 3.2rem;
  padding-block: 3.2rem;

  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  border-radius: 0.25rem;
}

#testimonials blockquote p {
  position: relative;
  /* da um recuo no texto para encaixar o span absolute */
  text-indent: 3rem;
}
#testimonials blockquote p span {
  font-weight: 700;
  font-size: 4.8rem;
  font-family: serif;

  position: absolute;
  top: -1rem;
  /* recuo negativo para ecaixar no espaço do text-ident */
  left: -3rem;

  color: var(--primary-color);
}
/*  ======================CONTACT/CONTATO==================== */

/* alinhamento left conforme figma, de todo conteudo */
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  /* gap para separar os elementos, espaçamento */
  gap: 1.6rem;

  /* margin bottom para o button */
  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  /* gap espaçamento da imagem ate o item */
  gap: 0.8rem;
}

#contact .button {
  margin-bottom: 6rem;
}

/* ------formulario contato ------- */
#contact .div-formContato {
  width: 100%;
  background-color: var(--brand-green-light);
  border-radius: 10px;
}

#contact .div-formContato form {
  display: flex;
  flex-direction: column;
  gap: 1.4rem;

  padding-inline: 1rem;
  padding-bottom: 1rem;
}

#contact .div-formContato h3 {
  display: flex;
  align-items: center;
  padding-inline: 1rem;
  padding-top: 4.8rem;
  padding-bottom: 3.6rem;

  gap: 1.6rem;

  font-size: 2rem;
}
#contact .div-formContato h3 svg path {
  stroke: var(--primary-color);
}

#contact .div-formContato form label {
  font-weight: 400;
  font-size: 1rem;
  line-height: 150%;

  color: var(--brand-green-hover);
}

#contact .div-formContato form textarea,
#contact .div-formContato form input {
  font-family: 'DM Sans', sans-serif;
  font-size: 1.2rem;
  padding: 1.6rem;
  background-color: var(--brand-green-light2);
  border: 1px solid var(--primary-color);
  border-radius: 0.6rem;

  resize: none;
}

#contact .div-formContato a.button {
  border-radius: 1rem;
}

/*  ======================FOOTER==================== */

footer {
  background-color: var(--primary-color);

  /* padding top e bottom */
  padding-block: 6rem;

  text-align: left;
  color: #fff;
}

/* o .logo possui display inline e portanto, nao aceita margin-top e bottom, nao aceita width e height.
assim é preciso transformar em inline-block*/
footer .logo {
  display: inline-block;
  margin-bottom: 2.4rem;
}

/* aumentar o tamanho da logo/svg */
/* conforme figma */
footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

/* alterar todo path do SVG para branco, caso fosse imagem, precisaria substituir diretamente a mesma */
footer .logo path {
  fill: #fff;
}

/*  */
footer p {
  color: var(--brand-beige);

  /* como os textos estao em um unico P, e para dar o espaçamento entre eles (conforme figma), se usa o line-height */
  /* altura */
  line-height: 2;

  margin-bottom: 3.2rem;
}

/* esta definido como justify-content center no Nav/Menu como Geral, entao aqui se usa para flex-start conforme figma */
footer .social-links {
  justify-content: flex-start;
}

/*  ======================BUTTON/BACK TO TOP==================== */

/* inicia invisivel, so aparece qndo o scroll ativar - esta fixo na lateral direita */
#backToTopButton {
  position: fixed;
  bottom: 1rem;
  right: 2.5rem;

  opacity: 0;
  visibility: hidden;

  /* joga para fora da tela, pra depois voltar com o .show */
  transform: translateY(100%);
  transition: 200ms;
}

/* quando ele estiver com a classe .show */
#backToTopButton.show {
  opacity: 1;
  visibility: visible;

  transform: translateY(0);
}

/* =================================================MEDIA / RESPONSIVO============================================= */

/* min: 1024px */
@media (min-width: 1024px) {
  /* =======================GERAL  / padroes ==========================*/
  body {
    /* remover a sobreposiçao do scroll na pagina, espaço.. */
    /* o "auto" vai fazer a barra do scroll contar como tamanho da pagina tambem, e não a partir dele */
    overflow: auto;
  }

  .wrapper {
    /* conforme figma, como se fosse o .content */
    width: min(112rem, 100%);

    display: grid;
  }

  .col-b {
    /* vai ocupar a Coluna A */
    grid-area: A;
  }
  .col-b {
    /* vai ocupar a Coluna B */
    grid-area: B;
  }

  section {
    /* padding top e bottom */
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  /* =======================NAVIGATION==========================*/
  /* reset */

  /* seletor pegar todos os elementos do nav dentro do #navigation*/
  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    /* initial retorna ao estado padrao navegador */
    visibility: initial;
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    font-weight: initial;
    filter: initial;
  }

  /* --------VERSÃO DESKTOP ----------- */
  nav#navigation .open-menu,
  nav#navigation .close-menu,
  nav#navigation .social-links {
    display: none;
  }

  nav#navigation .menu {
    display: flex;
    justify-content: space-between;
    align-items: center;

    /* com width 60%, a caixa ira ocupar mais espaço, podendo aplicar o justify-content corretamente,
    antes estava limitada pois os elementos estavam se dividindo dentro do espaço, junto com o .logo */
    width: 60%;
  }

  /* se pegar apenas o ul, como foi definido acima para ser display:none, a outra ul(social-links) voltara aparecer,
  entao nesse caso pega apenas a primeira ul, que são as opçoes do menu - para aplicar espaçamento, transformar em flex */
  nav#navigation .menu ul:nth-child(1) {
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 2.1rem;

    color: var(--primary-color);

    opacity: 0.7;
  }

  nav#navigation .menu a.button {
    display: flex;
    justify-content: center;
    align-items: center;

    padding: 1rem 2.4rem;

    border: 1px solid var(--primary-color);
    border-radius: 4rem;

    color: var(--primary-color);
    font-size: 1.4rem;
    line-break: 1.8rem;
    font-weight: 700;
    text-transform: uppercase;
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    color: var(--brand-green-light2);
    border: none;
  }

  /* retira margin switch versao desk */
  nav#navigation .menu .switch {
    margin-inline: 0;
  }
  nav#navigation .menu .slider {
    background-color: var(--primary-color);
  }
  nav#navigation .menu .slider:before {
    background-color: #fff;
    background-image: url('../assets/dark-mode-inativo-24x24.png');
  }
  /* ------- */

  /* ===== scroll === */
  /* deixar .scroll colado para quando tiver a classe (adiciona via JS ao scroll a pagina) */
  nav#navigation.scroll .menu ul li a {
    color: var(--brand-green-light2);
    opacity: 0.6;
  }
  nav#navigation.scroll .menu a.button {
    color: #fff;
    border-color: #fff;
  }
  /* button nav ao scroll a pagina */
  nav#navigation.scroll .menu a.button.active,
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.3);
    border: none;
  }

  /* transition para opacity ao passar o mouse*/
  nav#navigation .menu ul li a {
    transition: opacity 0.4s;
  }
  /* hover ao passar mouse sobre item do menu */
  nav#navigation .menu ul li a.active,
  nav#navigation .menu ul li a:hover {
    opacity: 1;
    font-weight: 700;
  }

  /* criar a linha embaixo do item no menu, selecionado ou active etc */
  nav#navigation .menu ul li a::after {
    /* sempre pra criar algo precisa do content */
    content: '';
    /* começa como 0 quando passar mouse em cima pega 100% */
    width: 0%;
    height: 0.2rem;

    /* relative para poder usar o bottom, e colar o elemento embaixo no caso, negativo para o mover para baxo */
    position: relative;
    bottom: -2rem;
    /* cria um espaço */
    /* padding-inline: 0.8rem; */
    /* recua */
    left: -0.5rem;

    background-color: var(--primary-color);
    display: block;

    /* animaçao */
    transition: width 0.2s;
  }

  /* quando houver o scroll */
  nav#navigation.scroll .menu ul li a::after {
    background-color: #fff;
  }

  /* quando houver o hover */
  nav#navigation .menu ul li a.active::after,
  nav#navigation .menu ul li a:hover::after {
    padding-inline: 0.8rem;
    width: 100%;
  }

  nav#navigation .menu ul li a.active,
  nav#navigation .menu ul li a:hover {
    opacity: 1;
  }

  /* switch .slider com scroll */
  nav#navigation.scroll .menu .slider {
    background-color: #fff;
  }
  nav#navigation.scroll .menu .slider:before {
    background-color: var(--primary-color);
    background-image: url('../assets/darkmode-scroll-inativo-24x24.png');
  }

  /* =======================HOME==========================*/

  /* elemento atras do home/ backgroud */
  #home::before {
    /* para ficar ate a metade da div-stat, como no figma */
    /* % menos o nav-height(aqui 7.2rem) - observado pelo devtools do chrome ql melhor numero chegaria no melhor resultado */
    height: calc(95% - var(--nav-height));
  }

  #home {
    padding-top: var(--nav-height);
  }

  /* o Flex so trabalha em linha ou em coluna, com o Grid se pode posionar os elementos, definir o layout, no caso esse projeto pelo figma utiliza uma separaçao em 2 colunas seus conteudos em cada section(com exceção) */
  #home .wrapper {
    grid-template-columns: 60.5rem 1fr;

    /* area onde vai deixar cada elemento, colunas e linha*/
    grid-template-areas:
      'A B'
      'C C';
  }

  #home .col-a {
    /* vai ocupar a Coluna A */
    /* grid-area: A; */
    /* movido para Geral */

    text-align: left;

    /* alinha os elemento dentro da caixa que esta, no caso na coluna A */
    align-self: center;
  }

  /* feito classe geral */
  /* #home .col-b {
    /* vai ocupar a Coluna B */
  /* grid-area: B; */
  /* } */

  /* ---- */

  #home h1 {
    font-size: 5.2rem;
  }

  #home .content p {
    font-size: 1.8rem;
  }

  #home .button {
    margin: 0;
  }
  #home img {
    width: 42rem;
  }

  #home .div-stats {
    /* vai ocupar as Colunas C */
    grid-area: C;

    /* ja possui display flex em colum, entao muda para row */
    flex-direction: row;
    padding: 6rem;

    /* remover o gap/espaçamento que estava na versao mobile */
    gap: 0;
  }

  /* seletor para pegar um .stat que tenha um .stat anterior,no caso o segundo e o terceiro, para adicionar as bordas na lateral(efeito de separação) 
  no caso o primeiro nao seleciona ninguem, pois nao tem ninguem(.stat) antes dele*/
  #home .div-stats .stat + .stat {
    border-left: 1px solid var(--primary-color);
  }

  /* realiza o preenchimento por igual entre os elementos, como definido tamanho */
  #home .div-stats .stat {
    /* como .div-stats ja é um flex o 1 significa que ele vai preencher por igual cada elemento, a mesma largura, de acordo com a caixa que eles estao inseridos dentro, no caso a .div-stats*/
    flex: 1;
  }

  /* =======================SERVICES==========================*/

  #services h2 {
    width: 47rem;
    margin-inline: auto;
  }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap;
    /* /\ voltou a ficar um embaixo do outro, entao precisa alterar o tamanho do card= #services .cards .card */

    /* espaçamento entre cada .card */
    gap: 4rem;
  }

  #services .cards .card {
    width: 30%;
    /* cresce o elemento pra preecher o espaço restante ref. aos 30% de cada um, caso sobre uma margem ou espaço */
    flex-grow: 1;
  }

  /* =======================ABOUT==========================*/

  #about .wrapper {
    /* define a grid */
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'B A';

    /* espaçamento entre os elementos */
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .content p {
    margin-bottom: 0;
  }

  /* =======================CONTACT==========================*/

  #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';

    align-items: center;
  }

  #contact h2 {
    width: 40.4rem;
  }

  #contact .div-formContato h3,
  #contact .div-formContato form {
    padding-inline: 4.8rem;
  }

  /* =======================FOOTER==========================*/

  footer {
    padding-block: 8rem;
  }

  footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  footer .col-a {
    /* alinha ele mesmo */
    align-self: center;
  }

  footer .col-b {
    align-self: center;
    justify-self: flex-end;
  }

  /* remover a margin */
  footer p {
    margin-bottom: 0;
  }
}
